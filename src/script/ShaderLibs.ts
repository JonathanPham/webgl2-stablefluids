export const GLSL_PS_ADVECT =        'precision mediump float;\nvarying vec2 vUV;\n\nuniform sampler2D uSampler;\nuniform float uDeltaTime;\nvoid main(){\nvec4 col = texture2D(uSampler,vUV);\nivec2 texsize = textureSize(uSampler,1);\nvec2 duv = col.xy * vec2((float)texsize.y/texsize.x,1.0) * uDeltaTime;\ngl_FragColor = texture2D(uSampler,duv);\n}';        
export const GLSL_PS_DEFAULT =       'precision highp float;\nvarying vec2 vUV;\n\nuniform sampler2D uSampler;\nvoid main(){\nvec4 col = texture2D(uSampler,vUV);\ngl_FragColor = col;\n}';       
export const GLSL_PS_FORCE =      'precision highp float;\nvarying vec2 vUV;\n\nuniform sampler2D uSampler;\nuniform float uDeltaTime;\n\n//map to [0,1.0]\nuniform vec2 uForceOrigin;\nuniform vec2 uForceVector;\nuniform float uForceExponent;\nvoid main(){\nvec4 col = texture2D(uSampler,vUV);\nivec2 texsize = textureSize(uSampler,0);\n\nvec2 pos = col.xy;\nfloat amp = exp(-uForceExponent * distance(uForceOrigin,pos));\n\ngl_FragColor = col + uForceVector * amp;\n}';      
export const GLSL_PS_JACOBI1D =     'precision highp float;\nvarying vec2 vUV;\nuniform sampler2D uSampler; //1D\nuniform sampler2D uSamplerB;//1D\n\nuniform float uAlpha;\nuniform float uBeta;\n\nvoid main(){\nivec2 texsize = textureSize(uSampler,0);\nfloat uoff = 1.0/ texsize.x;\nfloat voff = 1.0 /texsize.y;\n\nfloat x1 = texture2D(uSampler,vUV - vec2(uoff,0)).x;\nfloat x2 = texture2D(uSampler,vUV + vec2(uoff,0)).x;\nfloat y1 = texture2D(uSampler,vUV - vec2(0,voff)).x;\nfloat y2 = texture2D(uSampler,vUV + vec2(0,voff)).x;\n\nfloat b1 = texture2D(uSamplerB,vUV).x;\n\ngl_FragColor = (x1 + x2 +y1+y2 + uAlpha *b1) / uBeta;\n}';     
export const GLSL_PS_JACOBI2D =    'precision mediump float;\nvarying vec2 vUV;\nuniform sampler2D uSampler; //2D\nuniform sampler2D uSamplerB;//2D\n\nuniform float uAlpha;\nuniform float uBeta;\n\nvoid main(){\nivec2 texsize = textureSize(uSampler,0);\nfloat uoff = 1.0/ texsize.x;\nfloat voff = 1.0 /texsize.y;\n\nvec2 x1 = texture2D(uSampler,vUV - vec2(uoff,0)).xy;\nvec2 x2 = texture2D(uSampler,vUV + vec2(uoff,0)).xy;\nvec2 y1 = texture2D(uSampler,vUV - vec2(0,voff)).xy;\nvec2 y2 = texture2D(uSampler,vUV + vec2(0,voff)).xy;\n\nvec2 b1 = texture2D(uSamplerB,vUV).xy;\n\ngl_FragColor.xy = (x1 + x2 +y1+y2 + uAlpha *b1) / uBeta;\n}';    
export const GLSL_PS_PROJFINISH =   'precision highp float;\nvarying vec2 vUV;\n\nuniform sampler2D uSampler; //2D\nuniform sampler2D uSamplerP; //1D\nuniform sampler2D uSamplerW; //2D\n\nuniform float uDeltaTime;\nvoid main(){\nivec2 texsize = textureSize(uSampler,0);\nfloat uoff = 1.0 / texsize.x;\nfloat voff = 1.0 / texsize.y;\n\nfloat p1 = texture2D(uSamplerP,vUV - vec2(uoff,0)).x;\nfloat p2 = texture2D(uSamplerP,vUV + vec2(uoff,0)).x;\nfloat p3 = texture2D(uSamplerP,vUV - vec2(0,voff)).x;\nfloat p4 = texture2D(uSamplerP,vUV + vec2(0,voff)).x;\n\nvec2 u = texture2D(uSamplerW,vUV).xy - vec2(p2-p1,p4-p3) /2.0;\n\ngl_FragColor.xy = u;\n}';   
export const GLSL_PS_PROJSETUP =  'precision highp float;\nvarying vec2 vUV;\n\nuniform sampler2D uSampler;\nuniform float uDeltaTime;\nvoid main(){\nivec2 texsize = textureSize(uSampler,0);\n\nvec2 off = vec2(1.0/texsize.x,1.0/texsize.y);\nfloat x1 = texture2D(uSampler,vUV + vec2(off.x,0)).x;\nfloat x2 = texture2D(uSampler,vUV - vec2(off.x,0).x);\n\nfloat y1 = texture2D(uSampler,vUV+ vec2(0,off.y)).y;\nfloat y2 = texture2D(uSampler,vUV - vec2(0,off.y)).y;\n\nvec4 col = 0;\ncol.x = (x1 - x2 + y1 - y2) / 2.0;\ngl_FragColor = col;\n}';  
export const GLSL_VS_DEFAULT = 'precision mediump float;\nattribute vec2 aPosition;\nattribute vec2 aUV;\n\nvarying vec2 vUV;\n\nvoid main(){\ngl_Position = vec4(aPosition,0,1);\nvUV = aUV;\n}'; 
